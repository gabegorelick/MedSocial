<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security" 
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">
                        
    <http use-expressions="true" entry-point-ref="gaeEntryPoint">
    	<intercept-url pattern="/" access="permitAll" />
    	
    	<!-- allow access to dev console -->
    	<intercept-url pattern="/_ah/**" access="permitAll"/>
    	
    	<intercept-url pattern="/resources/**" access="permitAll"/>
    	<intercept-url pattern="/logout" access="permitAll"/>
    	<intercept-url pattern="/register/**" access="hasRole('NEW_USER')" />
    	<intercept-url pattern="/**" access="hasRole('USER')" />
    	<custom-filter position="PRE_AUTH_FILTER" ref="gaeFilter" />
    	
    </http>
    
    <b:bean id="gaeEntryPoint" class="com.medsocial.security.GoogleAccountsAuthenticationEntryPoint" />
    
    <b:bean id="gaeFilter" class="com.medsocial.security.GaeAuthenticationFilter">
    	<b:property name="authenticationManager" ref="authenticationManager"/>
    </b:bean>
    
    <authentication-manager alias="authenticationManager">
    	<authentication-provider ref="gaeAuthenticationProvider"/>
    </authentication-manager>

	<b:bean id="gaeAuthenticationProvider" class="com.medsocial.security.GoogleAccountsAuthenticationProvider">
		<b:property name="userRegistry" ref="userRegistry" />
	</b:bean>
	
	<b:bean id="userRegistry" class="com.medsocial.security.GaeDatastoreUserRegistry" />

</b:beans>